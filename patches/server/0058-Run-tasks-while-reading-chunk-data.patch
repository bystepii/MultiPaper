From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 13 Feb 2022 14:02:25 +1000
Subject: [PATCH] Run tasks while reading chunk data


diff --git a/src/main/java/io/papermc/paper/chunk/system/io/RegionFileIOThread.java b/src/main/java/io/papermc/paper/chunk/system/io/RegionFileIOThread.java
index 53674f72ec9fc4938dcd8f844e0cdb3165af6085..c156c9a67c55ec23589bd60d3e653049d2ddca12 100644
--- a/src/main/java/io/papermc/paper/chunk/system/io/RegionFileIOThread.java
+++ b/src/main/java/io/papermc/paper/chunk/system/io/RegionFileIOThread.java
@@ -15,6 +15,7 @@ import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.chunk.storage.RegionFile;
 import net.minecraft.world.level.chunk.storage.RegionFileStorage;
+import org.bukkit.Bukkit;
 import org.slf4j.Logger;
 import java.io.IOException;
 import java.lang.invoke.VarHandle;
@@ -950,6 +951,11 @@ public final class RegionFileIOThread extends PrioritisedQueueExecutorThread {
         }, true, priority);
 
         try {
+            // MultiPaper start - don't block the main thread
+            if (!ret.isDone() && Bukkit.isPrimaryThread()) {
+                world.chunkSource.mainThreadProcessor.managedBlock(ret::isDone);
+            }
+            // MultiPaper end
             return ret.join();
         } catch (final CompletionException ex) {
             throw new IOException(ex);
diff --git a/src/main/java/io/papermc/paper/chunk/system/scheduling/ChunkHolderManager.java b/src/main/java/io/papermc/paper/chunk/system/scheduling/ChunkHolderManager.java
index 259c3a1c34f592bde4600ad2a057d4cc143a648a..d3202f05547de34d8f67917669b30b63b5d43268 100644
--- a/src/main/java/io/papermc/paper/chunk/system/scheduling/ChunkHolderManager.java
+++ b/src/main/java/io/papermc/paper/chunk/system/scheduling/ChunkHolderManager.java
@@ -35,6 +35,7 @@ import net.minecraft.server.level.TicketType;
 import net.minecraft.util.SortedArraySet;
 import net.minecraft.util.Unit;
 import net.minecraft.world.level.ChunkPos;
+import org.bukkit.Bukkit;
 import org.bukkit.plugin.Plugin;
 import org.slf4j.Logger;
 import java.io.IOException;
@@ -995,7 +996,11 @@ public final class ChunkHolderManager {
         }
 
         // Note: no need to busy wait on the chunk queue, poi load will complete off-main
-
+        // MultiPaper start - don't block the main thread
+        if (!isCompleted.get() && Bukkit.isPrimaryThread()) {
+            world.chunkSource.mainThreadProcessor.managedBlock(isCompleted::get);
+        }
+        // MultiPaper end
         boolean interrupted = false;
         while (!isCompleted.get()) {
             interrupted |= Thread.interrupted();
diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 856cb07ae771879010d884e22ad6c637b821a918..2c3fa9ad4191f6f000361693103a5efea4dd46c6 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -1,6 +1,7 @@
 package net.minecraft.server.level;
 
 import co.aikar.timings.Timing; // Paper
+import com.destroystokyo.paper.io.PaperFileIOThread;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableList.Builder;
 import com.google.common.collect.Iterables;
